generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Item {
  id            Int       @id @default(autoincrement())
  title         String
  sku           String
  barcode       String
  quantity      Int
  buyingPrice   Float
  sellingPrice  Float
  reOrderPoint  Int
  weight        Float
  dimensions    String
  taxRate       Float
  description   String
  notes         String
  categoryId    Int
  unitId        Int
  brandId       Int
  supplierId    Int
  warehouseId   Int

  category      Category   @relation(fields: [categoryId], references: [id])
  unit          Unit       @relation(fields: [unitId], references: [id])
  brand         Brand      @relation(fields: [brandId], references: [id])
  supplier      Supplier   @relation(fields: [supplierId], references: [id])
  warehouse     Warehouse  @relation(fields: [warehouseId], references: [id])  
  addStockAdjustments AddStockAdjustment[] 
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
}

model Category {
  id          Int      @id @default(autoincrement())
  title       String   @unique @db.VarChar(100)
  description String?  @db.VarChar(100)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  items       Item[]
}

model Unit {
  id           Int    @id @default(autoincrement())
  title        String @unique  @db.VarChar(100)
  abbreviation String @db.VarChar(10)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  items        Item[]
}

model Brand {
  id    Int     @id @default(autoincrement())
  title String  @unique @db.VarChar(100)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  items       Item[]
}

model Warehouse {
  id                       Int @id @default(autoincrement())
  title                    String @unique @db.VarChar(100)
  location                 String?  @db.VarChar(500)
  description              String? @db.Text
  warehouseType            String?
  addStockAdjustments      AddStockAdjustment[]
  givingTransferAdjustments TransferStockAdjustment[] @relation("GivingWarehouseRelation")
  recievingTransferAdjustments TransferStockAdjustment[] @relation("RecievingWarehouseRelation")
  items Item[]

  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
}


model AddStockAdjustment {
  id              Int       @id @default(autoincrement())
  referenceNumber String  @db.VarChar(100)
  addStockQty     Int
  notes           String? @db.VarChar(500)
  warehouseId     Int
  itemId          Int
  item            Item      @relation(fields: [itemId], references: [id])
  warehouse       Warehouse @relation(fields: [warehouseId], references: [id])

  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())

  @@index([itemId], map: "AddStockAdjustment_itemId_fkey")
  @@index([warehouseId], map: "AddStockAdjustment_warehouseId_fkey")
}

model TransferStockAdjustment {
  id                    Int       @id @default(autoincrement())
  referenceNumber       String  @db.VarChar(100)
  transferStockQty      Int
  notes                 String? @db.VarChar(500)
  givingWarehouseId     Int
  givingWarehouse       Warehouse @relation("GivingWarehouseRelation", fields: [givingWarehouseId], references: [id])
  recievingWarehouseId  Int
  recievingWarehouse    Warehouse @relation("RecievingWarehouseRelation", fields: [recievingWarehouseId], references: [id])
 
  itemId                Int

  @@index([itemId], map: "TransferStockAdjustment_itemId_fkey")
}

model Supplier {
  id            Int     @id @default(autoincrement())
  title         String  @unique 
  phone         String? @db.VarChar(100)
  email         String? @unique
  address       String? @db.VarChar(500)
  contactPerson String? @db.VarChar(100)
  supplierCode  String  @unique
  paymentTerms  String? @db.VarChar(100)
  taxID         String? @db.VarChar(100)
  notes         String? @db.VarChar(500)
  items         Item[]
  
  @@index([title]) // Aggiunta di indice per migliorare le prestazioni di ricerca
  @@index([contactPerson]) // Indice per ricerche frequenti per contatto
}

